// Note: This file is autogenerated. Do not edit it directly.
//
// Describes the contents of the test directory, which is a blueprint for
// files and directories. Tests can create a unique, safe environment for
// interacting with the contents of such a directory.
//
// Having strong typing for the test directory contents ensures that tests can
// be written with confidence that the files and directories they expect are
// actually found. Otherwise the tests are brittle and can break easily.

import * as z from "zod"

export const MyTestDirectorySchema = z.object({
  name: z.literal("test-environment/"),
  type: z.literal("directory"),
  contents: z.object({
    ".bashrc": z.object({
      name: z.literal(".bashrc"),
      type: z.literal("file"),
    }),
    ".config": z.object({
      name: z.literal(".config/"),
      type: z.literal("directory"),
      contents: z.object({
        yazi: z.object({
          name: z.literal("yazi/"),
          type: z.literal("directory"),
          contents: z.object({
            "init.lua": z.object({
              name: z.literal("init.lua"),
              type: z.literal("file"),
            }),
            "keymap.toml": z.object({
              name: z.literal("keymap.toml"),
              type: z.literal("file"),
            }),
          }),
        }),
      }),
    }),
    "config-modifications": z.object({
      name: z.literal("config-modifications/"),
      type: z.literal("directory"),
      contents: z.object({
        "customize_colors.lua": z.object({
          name: z.literal("customize_colors.lua"),
          type: z.literal("file"),
        }),
      }),
    }),
    "dir-with-jumpable-files": z.object({
      name: z.literal("dir-with-jumpable-files/"),
      type: z.literal("directory"),
      contents: z.object({
        file1: z.object({ name: z.literal("file1"), type: z.literal("file") }),
        file2: z.object({ name: z.literal("file2"), type: z.literal("file") }),
      }),
    }),
    "lots-of-files": z.object({
      name: z.literal("lots-of-files/"),
      type: z.literal("directory"),
      contents: z.object({
        file: z.object({ name: z.literal("file"), type: z.literal("file") }),
        file_1: z.object({
          name: z.literal("file_1"),
          type: z.literal("file"),
        }),
        file_10: z.object({
          name: z.literal("file_10"),
          type: z.literal("file"),
        }),
        file_11: z.object({
          name: z.literal("file_11"),
          type: z.literal("file"),
        }),
        file_12: z.object({
          name: z.literal("file_12"),
          type: z.literal("file"),
        }),
        file_13: z.object({
          name: z.literal("file_13"),
          type: z.literal("file"),
        }),
        file_14: z.object({
          name: z.literal("file_14"),
          type: z.literal("file"),
        }),
        file_15: z.object({
          name: z.literal("file_15"),
          type: z.literal("file"),
        }),
        file_16: z.object({
          name: z.literal("file_16"),
          type: z.literal("file"),
        }),
        file_17: z.object({
          name: z.literal("file_17"),
          type: z.literal("file"),
        }),
        file_18: z.object({
          name: z.literal("file_18"),
          type: z.literal("file"),
        }),
        file_19: z.object({
          name: z.literal("file_19"),
          type: z.literal("file"),
        }),
        file_2: z.object({
          name: z.literal("file_2"),
          type: z.literal("file"),
        }),
        file_20: z.object({
          name: z.literal("file_20"),
          type: z.literal("file"),
        }),
        file_21: z.object({
          name: z.literal("file_21"),
          type: z.literal("file"),
        }),
        file_22: z.object({
          name: z.literal("file_22"),
          type: z.literal("file"),
        }),
        file_23: z.object({
          name: z.literal("file_23"),
          type: z.literal("file"),
        }),
        file_24: z.object({
          name: z.literal("file_24"),
          type: z.literal("file"),
        }),
        file_25: z.object({
          name: z.literal("file_25"),
          type: z.literal("file"),
        }),
        file_26: z.object({
          name: z.literal("file_26"),
          type: z.literal("file"),
        }),
        file_3: z.object({
          name: z.literal("file_3"),
          type: z.literal("file"),
        }),
        file_4: z.object({
          name: z.literal("file_4"),
          type: z.literal("file"),
        }),
        file_5: z.object({
          name: z.literal("file_5"),
          type: z.literal("file"),
        }),
        file_6: z.object({
          name: z.literal("file_6"),
          type: z.literal("file"),
        }),
        file_7: z.object({
          name: z.literal("file_7"),
          type: z.literal("file"),
        }),
        file_8: z.object({
          name: z.literal("file_8"),
          type: z.literal("file"),
        }),
        file_9: z.object({
          name: z.literal("file_9"),
          type: z.literal("file"),
        }),
      }),
    }),
  }),
})

export const MyTestDirectoryContentsSchema =
  MyTestDirectorySchema.shape.contents
export type MyTestDirectoryContentsSchemaType = z.infer<
  typeof MyTestDirectorySchema
>

export type MyTestDirectory = MyTestDirectoryContentsSchemaType["contents"]

export const testDirectoryFiles = z.enum([
  ".bashrc",
  ".config/yazi/init.lua",
  ".config/yazi/keymap.toml",
  ".config/yazi",
  ".config",
  "config-modifications/customize_colors.lua",
  "config-modifications",
  "dir-with-jumpable-files/file1",
  "dir-with-jumpable-files/file2",
  "dir-with-jumpable-files",
  "lots-of-files/file",
  "lots-of-files/file_1",
  "lots-of-files/file_10",
  "lots-of-files/file_11",
  "lots-of-files/file_12",
  "lots-of-files/file_13",
  "lots-of-files/file_14",
  "lots-of-files/file_15",
  "lots-of-files/file_16",
  "lots-of-files/file_17",
  "lots-of-files/file_18",
  "lots-of-files/file_19",
  "lots-of-files/file_2",
  "lots-of-files/file_20",
  "lots-of-files/file_21",
  "lots-of-files/file_22",
  "lots-of-files/file_23",
  "lots-of-files/file_24",
  "lots-of-files/file_25",
  "lots-of-files/file_26",
  "lots-of-files/file_3",
  "lots-of-files/file_4",
  "lots-of-files/file_5",
  "lots-of-files/file_6",
  "lots-of-files/file_7",
  "lots-of-files/file_8",
  "lots-of-files/file_9",
  "lots-of-files",
  ".",
])
export type MyTestDirectoryFile = z.infer<typeof testDirectoryFiles>
